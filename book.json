[
  {
    "name": "Propositional logic",
    "problems":
    [
      {
        "id": "DoubleNegation",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "!!P ≡ P"
      },
      {
        "id": "AndAssociativity",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "P & (Q & R) ≡ (P & Q) & R)"
      },
      {
        "id": "OrAssociativity",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "P | (Q | R) ≡ (P | Q) | R)"
      },
      {
        "id": "AndDistributivity",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "P & (Q | R) ≡ (P & Q) | (P & R)"
      },
      {
        "id": "OrDistributivity",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "P | (Q & R) ≡ (P | Q) & (P | R)"
      },
      {
        "id": "DeMorgan1",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "!(P | Q) ≡ !P & !Q"
      },
      {
        "id": "DeMorgan2",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "!(P & Q) ≡ !P | !Q"
      },
      {
        "id": "1.14.1.a",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [ "p ⊃ q", "r ⊃ q" ],
        "conclusion": "(p ∨ r) ⊃ q"
      },
      {
        "id": "1.14.1.b",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [ "p ⊃ (q ∧ r)", "¬r" ],
        "conclusion": "¬p"
      },
      {
        "id": "1.14.1.c",
        "logic": "PropositionalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "((p ⊃ q) ⊃ q) ⊃ q"
      },
      {
        "id": "1.14.1.d",
        "logic": "PropositionalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "((p ⊃ q) ∧ (¬p ⊃ q)) ⊃ ¬p"
      },
      {
        "id": "1.14.1.e",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [ "p ≡ (q ≡ r)" ],
        "conclusion": "(p ≡ q) ≡ r"
      },
      {
        "id": "1.14.1.f",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [ "¬(p ⊃ q) ∧ ¬(p ⊃ r)" ],
        "conclusion": "¬q ∨ ¬r"
      },
      {
        "id": "1.14.1.g",
        "logic": "PropositionalLogic",
        "expected": "not-proved",
        "premises": [ "p ∧ (¬r ∨ s)", "¬(q ⊃ s)" ],
        "conclusion": "r"
      },
      {
        "id": "1.14.1.h",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(p ⊃ (q ⊃ r)) ⊃ (q ⊃ (p ⊃ r))"
      },
      {
        "id": "1.14.1.i",
        "logic": "PropositionalLogic",
        "expected": "not-proved",
        "premises": [ "¬(p ∧ ¬q) ∨ r", "p ⊃ (r ≡ s)" ],
        "conclusion": "p ≡ q"
      },
      {
        "id": "1.14.1.j",
        "logic": "PropositionalLogic",
        "expected": "proved",
        "premises": [ "p ≡ ¬¬q", "¬q ⊃ (r ∧ ¬s)", "s ⊃ (p ∨ q)" ],
        "conclusion": "(s ∧ q) ⊃ p"
      }
    ]
  },
  {
    "name": "Basic normal modal logic",
    "problems": [
      {
        "id": "2.12.2.a",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∧ □B) ⊃ □(A ∧ B)"
      },
      {
        "id": "2.12.2.b",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∨ □B) ⊃ □(A ∨ B)"
      },
      {
        "id": "2.12.2.c",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ A ≡ ¬◇¬A"
      },
      {
        "id": "2.12.2.d",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ A ≡ ¬□¬A"
      },
      {
        "id": "2.12.2.e",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ∧ B) ⊃ (◇A ∧ ◇B)"
      },
      {
        "id": "2.12.2.f",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ∨ B) ⊃ (◇A ∨ ◇B)"
      },
      {
        "id": "2.12.2.g",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [ "□(A ⊃ B)" ],
        "conclusion": "◇A ⊃ ◇B"
      },
      {
        "id": "2.12.2.h",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [ "□A", "◇B" ],
        "conclusion": "◇(A ∧ B)"
      },
      {
        "id": "2.12.2.i",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□A ≡ □(¬A ⊃ A)"
      },
      {
        "id": "2.12.2.j",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□A ⊃ □(B ⊃ A)"
      },
      {
        "id": "2.12.2.k",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬◇B ⊃ □(B ⊃ A)"
      },
      {
        "id": "2.12.2.l",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□(p ∨ q) ⊃ (□p ∨ □q)"
      },
      {
        "id": "2.12.2.m",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [ "□p", "□¬q" ],
        "conclusion": "□(p ⊃ q)"
      },
      {
        "id": "2.12.2.n",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [ "◇p", "◇q" ],
        "conclusion": "◇(p ∧ q)"
      },
      {
        "id": "2.12.2.o",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "2.12.2.p",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ ◇p"
      },
      {
        "id": "2.12.2.q",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [ "p" ],
        "conclusion": "□p"
      },
      {
        "id": "2.12.2.r",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "2.12.2.s",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ ◇◇p"
      },
      {
        "id": "2.12.2.t",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "p ⊃ □◇p"
      },
      {
        "id": "2.12.2.u",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇p ⊃ □◇p"
      },
      {
        "id": "2.12.2.v",
        "logic": "KModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇(p ∨ ¬p)"
      }
    ]
  },
  {
    "name": "Normal modal logic",
    "problems": [
      {
        "id": "3.10.3.a",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□(A ⊃ B) ∧ □(B ⊃ C)) ⊃ (A ⊃ C)"
      },
      {
        "id": "3.10.3.b",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□(A ⊃ B) ∧ ◇(A ∧ C)) ⊃ ◇(B ∧ C)"
      },
      {
        "id": "3.10.3.c",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∧ □B) ⊃ (A ≡ B)"
      },
      {
        "id": "3.10.3.d",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ⊃ B) ≡ (□A ⊃ ◇B)"
      },
      {
        "id": "3.10.3.e",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(◇¬A ∨ ◇¬B) ∨ ◇(A ∨ B)"
      },
      {
        "id": "3.10.3.f",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ⊃ (B ∧ C)) ⊃ ((□A ⊃ ◇B) ∧ (□A ⊃ ◇C))"
      },
      {
        "id": "3.10.4.a",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∨ □B) ≡ □(□A ∨ □B)"
      },
      {
        "id": "3.10.4.b",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(□(A ≡ B) ⊃ C) ⊃ (□(A ≡ B) ⊃ □C)"
      },
      {
        "id": "3.10.5.a",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇A ⊃ ◇◇A"
      },
      {
        "id": "3.10.5.b",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇A ⊃ □◇A"
      },
      {
        "id": "3.10.5.c",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(□A ⊃ □B) ∨ □(□B ⊃ □A)"
      },
      {
        "id": "3.10.5.d",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(◇A ⊃ B) ≡ □(A ⊃ □B)"
      },
      {
        "id": "3.10.6.a",
        "logic": "S4ModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇□p ⊃ □◇p"
      },
      {
        "id": "3.10.6.b",
        "logic": "S4ModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□(□p ⊃ q) ∨ □(□q ⊃ p)"
      },
      {
        "id": "3.10.6.c",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(p ≡ q) ⊃ □(□p ≡ □q)"
      },
      {
        "id": "3.10.6.d",
        "logic": "S4ModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇□p ≡ □◇p"
      }
    ]
  },
  {
    "name": "Temporal modal logic",
    "problems": [
      {
        "id": "3.10.10.a",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᶠ(p ⊃ q) ⊃ (□ᶠp ⊃ □ᶠq)"
      },
      {
        "id": "3.10.10.b",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᶠp ≡ ¬□ᶠ¬p"
      },
      {
        "id": "3.10.10.c",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "p ⊃ □ᶠ◇ᵖp"
      },
      {
        "id": "3.10.10.d",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [ "□ᶠp ⊃ □ᶠ□ᶠp" ],
        "conclusion": "□ᵖp ⊃ □ᵖ□ᵖp"
      },
      {
        "id": "3.10.10.e",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᶠ(p ⊃ q) ⊃ (◇ᶠp ⊃ ◇ᶠq)"
      },
      {
        "id": "3.10.10.f",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [ "◇ᶠ◇ᶠp ⊃ ◇ᶠp" ],
        "conclusion": "◇ᵖ◇ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.10.g",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□ᵖp ∨ □ᵖq) ⊃ □ᵖ(p ∨ q)"
      },
      {
        "id": "3.10.10.h",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᵖ(p ∧ q) ⊃ (◇ᵖp ∧ ◇ᵖq)"
      },
      {
        "id": "3.10.10.i",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠq) ⊃ ((◇ᶠ(p ∧ ◇ᶠq)) ∨ ◇ᶠ(p ∧ q) ∨ (◇ᶠ(◇ᶠp ∧ q)))"
      },
      {
        "id": "3.10.10.j",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᵖp ∧ ◇ᵖq) ⊃ ((◇ᵖ(p ∧ ◇ᵖq)) ∨ ◇ᵖ(p ∧ q) ∨ (◇ᵖ(◇ᵖp ∧ q)))"
      },
      {
        "id": "3.10.10.k",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᵖ(p ∧ q) ≡ (□ᵖp ∧ □ᵖq)"
      },
      {
        "id": "3.10.10.l",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.10.m",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(p ∧ □ᵖp) ⊃ ◇ᶠ□ᵖp"
      },
      {
        "id": "3.10.10.n",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᵖ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.10.o",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□ᵖ(□ᵖp ⊃ p) ⊃ □ᵖp"
      },
      {
        "id": "3.10.10.p",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇ᵖ□ᵖp ⊃ □ᵖ◇ᵖp"
      },
      {
        "id": "3.10.10.q",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇ᶠ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.10.r",
        "logic": "KTemporalModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠ□ᶠ¬p) ⊃ ◇ᶠ(□ᵖ◇ᶠp ∧ □ᶠ¬p)"
      },
      {
        "id": "3.10.11.d",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [ "□ᶠp ⊃ □ᶠ□ᶠp" ],
        "conclusion": "□ᵖp ⊃ □ᵖ□ᵖp"
      },
      {
        "id": "3.10.11.f",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [ "◇ᶠ◇ᶠp ⊃ ◇ᶠp" ],
        "conclusion": "◇ᵖ◇ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.11.i",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠq) ⊃ ((◇ᶠ(p ∧ ◇ᶠq)) ∨ ◇ᶠ(p ∧ q) ∨ (◇ᶠ(◇ᶠp ∧ q)))"
      },
      {
        "id": "3.10.11.j",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᵖp ∧ ◇ᵖq) ⊃ ((◇ᵖ(p ∧ ◇ᵖq)) ∨ ◇ᵖ(p ∧ q) ∨ (◇ᵖ(◇ᵖp ∧ q)))"
      },
      {
        "id": "3.10.11.l",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.11.m",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(p ∧ □ᵖp) ⊃ ◇ᶠ□ᵖp"
      },
      {
        "id": "3.10.11.o",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□ᵖ(□ᵖp ⊃ p) ⊃ □ᵖp"
      },
      {
        "id": "3.10.11.p",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇ᵖ□ᵖp ⊃ □ᵖ◇ᵖp"
      },
      {
        "id": "3.10.11.q",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇ᶠ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.11.r",
        "logic": "KTemporalExtModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠ□ᶠ¬p) ⊃ ◇ᶠ(□ᵖ◇ᶠp ∧ □ᶠ¬p)"
      }
    ]
  },
  {
    "name": "Non-normal modal logic",
    "problems": [
      {
        "id": "4.13.2.a",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "A⥽A"
      },
      {
        "id": "4.13.2.b",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ⥽ B) ∧ (B ⥽ C)) ⥽ (A ⥽ C)"
      },
      {
        "id": "4.13.2.c",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ⥽ B) ⥽ (¬B ⥽ ¬A)"
      },
      {
        "id": "4.13.2.d",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□¬A ⊃ □¬(A ∧ B)"
      },
      {
        "id": "4.13.3.a",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.3.b",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.3.c",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "¬(p ⥽ p) ⥽ q"
      },
      {
        "id": "4.13.3.d",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□(p ⥽ p)"
      },
      {
        "id": "4.13.3.e",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "(p ⥽ q) ⥽ (□p ⥽ □q)"
      },
      {
        "id": "4.13.3.f",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.3.g",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "◇◇p"
      },
      {
        "id": "4.13.3.h",
        "logic": "NModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□□(p ∨ ¬p)"
      },
      {
        "id": "4.13.4.a",
        "logic": "S2ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.4.b",
        "logic": "S3ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.4.c",
        "logic": "S2ModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.4.d",
        "logic": "S3ModalLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.4.e",
        "logic": "S3ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.4.f",
        "logic": "S3.5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.4.g",
        "logic": "S3.5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(p ⥽ q) ⥽ (□p ⥽ □q)"
      }
    ]
  },
  {
    "name": "Intuitionistic logic",
    "problems": [
      {
        "id": "6.10.3.a",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(P ∧ (¬P ∨ Q)) → Q"
      },
      {
        "id": "6.10.3.b",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(P ∧ ¬P)"
      },
      {
        "id": "6.10.3.c",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∨ Q" ],
        "conclusion": "P → Q"
      },
      {
        "id": "6.10.3.d",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬(P ∨ Q)" ],
        "conclusion": "¬P ∧ ¬Q"
      },
      {
        "id": "6.10.3.e",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∧ ¬Q" ],
        "conclusion": "¬(P ∨ Q)"
      },
      {
        "id": "6.10.3.f",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∨ ¬Q" ],
        "conclusion": "¬(P ∧ Q)"
      },
      {
        "id": "6.10.3.g",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "P → (P → Q)" ],
        "conclusion": "P → Q"
      },
      {
        "id": "6.10.3.h",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬¬(P ∨ ¬P)"
      },
      {
        "id": "6.10.4.a",
        "logic": "IntuitionisticLogic",
        "expected": "not-proved",
        "premises": [],
        "conclusion": "P ∨ ¬P"
      },
      {
        "id": "6.10.4.b",
        "logic": "IntuitionisticLogic",
        "expected": "not-proved",
        "premises": [ "¬P → P" ],
        "conclusion": "P"
      },
      {
        "id": "6.10.4.c",
        "logic": "IntuitionisticLogic",
        "expected": "not-proved",
        "premises": [ "¬(P ∧ Q)" ],
        "conclusion": "¬P ∨ ¬Q"
      },
      {
        "id": "6.10.4.d",
        "logic": "IntuitionisticLogic",
        "expected": "not-proved",
        "premises": [ "¬P → ¬Q" ],
        "conclusion": "Q → P"
      },
      {
        "id": "6.10.4.e",
        "logic": "IntuitionisticLogic",
        "expected": "not-proved",
        "premises": [ "P → (Q ∨ R)" ],
        "conclusion": "(P → Q) ∨ (Q → R)"
      }
    ]
  }
]