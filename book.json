[
  {
    "name": "Propositional logic",
    "problems": [
      {
        "id": "DoubleNegation",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬¬P ≡ P"
      },
      {
        "id": "AndAssociativity",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "P ∧ (Q ∧ R) ≡ (P ∧ Q) ∧ R)"
      },
      {
        "id": "OrAssociativity",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "P ∨ (Q ∨ R) ≡ (P ∨ Q) ∨ R)"
      },
      {
        "id": "AndDistributivity",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "P ∧ (Q ∨ R) ≡ (P ∧ Q) ∨ (P ∧ R)"
      },
      {
        "id": "OrDistributivity",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "P ∨ (Q ∧ R) ≡ (P ∨ Q) ∧ (P ∨ R)"
      },
      {
        "id": "DeMorgan1",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(P ∨ Q) ≡ ¬P ∧ ¬Q"
      },
      {
        "id": "DeMorgan2",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(P ∧ Q) ≡ ¬P ∨ ¬Q"
      },
      {
        "id": "1.14.1.a",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [ "p ⊃ q", "r ⊃ q" ],
        "conclusion": "(p ∨ r) ⊃ q"
      },
      {
        "id": "1.14.1.b",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [ "p ⊃ (q ∧ r)", "¬r" ],
        "conclusion": "¬p"
      },
      {
        "id": "1.14.1.c",
        "logic": "WithoutModality",
        "expected": "disproved",
        "premises": [],
        "conclusion": "((p ⊃ q) ⊃ q) ⊃ q"
      },
      {
        "id": "1.14.1.d",
        "logic": "WithoutModality",
        "expected": "disproved",
        "premises": [],
        "conclusion": "((p ⊃ q) ∧ (¬p ⊃ q)) ⊃ ¬p"
      },
      {
        "id": "1.14.1.e",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [ "p ≡ (q ≡ r)" ],
        "conclusion": "(p ≡ q) ≡ r"
      },
      {
        "id": "1.14.1.f",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [ "¬(p ⊃ q) ∧ ¬(p ⊃ r)" ],
        "conclusion": "¬q ∨ ¬r"
      },
      {
        "id": "1.14.1.g",
        "logic": "WithoutModality",
        "expected": "disproved",
        "premises": [ "p ∧ (¬r ∨ s)", "¬(q ⊃ s)" ],
        "conclusion": "r"
      },
      {
        "id": "1.14.1.h",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "(p ⊃ (q ⊃ r)) ⊃ (q ⊃ (p ⊃ r))"
      },
      {
        "id": "1.14.1.i",
        "logic": "WithoutModality",
        "expected": "disproved",
        "premises": [ "¬(p ∧ ¬q) ∨ r", "p ⊃ (r ≡ s)" ],
        "conclusion": "p ≡ q"
      },
      {
        "id": "1.14.1.j",
        "logic": "WithoutModality",
        "expected": "proved",
        "premises": [ "p ≡ ¬¬q", "¬q ⊃ (r ∧ ¬s)", "s ⊃ (p ∨ q)" ],
        "conclusion": "(s ∧ q) ⊃ p"
      }
    ]
  },
  {
    "name": "First order logic",
    "problems": [
      {
        "id": "Socrates",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x(Human[x] ⊃ Mortal[x])", "Human[Socrates]" ],
        "conclusion": "Mortal[Socrates]"
      },
      {
        "id": "12.13.2.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x P[x]" ],
        "conclusion": "∀y P[y]"
      },
      {
        "id": "12.13.2.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∃x∃y S[x,y]" ],
        "conclusion": "∃y∃x S[x,y]"
      },
      {
        "id": "12.13.2.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "¬∃x A" ],
        "conclusion": "∀x(A ⊃ B)"
      },
      {
        "id": "12.13.2.d",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x C" ],
        "conclusion": "∀x(A ⊃ (B ∨ C))"
      },
      {
        "id": "12.13.5.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "a = a"
      },
      {
        "id": "12.13.5.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "a = b" ],
        "conclusion": "b = a"
      },
      {
        "id": "12.13.5.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "a = b", "b = c" ],
        "conclusion": "a = c"
      },
      {
        "id": "12.13.5.c'",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "q=w", "w=e", "e=r", "r=t", "t=y", "y=u", "u=i", "i=o", "o=p" ],
        "conclusion": "p=q"
      },
      {
        "id": "12.13.5.d",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x(x = a ⊃ P[x])" ],
        "conclusion": "P[a]"
      },
      {
        "id": "12.13.5.e",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "P[a]" ],
        "conclusion": "∀x(x = a ⊃ P[x])"
      },
      {
        "id": "12.13.5.f",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∃x(x = a ∧ P[x])" ],
        "conclusion": "P[a]"
      },
      {
        "id": "12.13.5.g",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "P[a]" ],
        "conclusion": "∃x(x = a ∧ P[x])"
      },
      {
        "id": "12.13.8.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "∃x(∃y P[y] ⊃ P[x])"
      },
      {
        "id": "12.13.8.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "∃x(P[x] ⊃ ∀y P[y])"
      },
      {
        "id": "13.10.2.a",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x(P[x] ⊃ Q[x])", "∃x P[x]" ],
        "conclusion": "∃x Q[x]"
      },
      {
        "id": "13.10.2.b",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x P[x] ⊃ ∃y Q[y]" ],
        "conclusion": "∃y(∀x P[x] ⊃ Q[y])"
      },
      {
        "id": "13.10.2.c",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "∃x ∀y R[x,y] ⊃ ∀y ∃x R[x,y]"
      },
      {
        "id": "13.10.2.d",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "disproved",
        "premises": [ "∃x P[x]", "∃x Q[x]" ],
        "conclusion": "∀x(P[x] ∧ Q[x])"
      },
      {
        "id": "13.10.2.e",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "disproved",
        "premises": [],
        "conclusion": "∀x P[x] ⊃ P[a]"
      },
      {
        "id": "13.10.2.f",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "(∀x P[x] ∧ \uD835\uDD08a) ⊃ P[a]"
      },
      {
        "id": "13.10.2.g",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "disproved",
        "premises": [],
        "conclusion": "P[a] ⊃ ∃x P[x]"
      },
      {
        "id": "13.10.2.h",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [],
        "conclusion": "(P[a] ∧ \uD835\uDD08a) ⊃ ∃x P[x]"
      },
      {
        "id": "13.10.2.i",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+WithoutModality",
        "expected": "proved",
        "premises": [ "∀x P[x]" ],
        "conclusion": "∃x P[x]"
      }
    ]
  },
  {
    "name": "Basic normal modal logic",
    "problems": [
      {
        "id": "2.12.2.a",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∧ □B) ⊃ □(A ∧ B)"
      },
      {
        "id": "2.12.2.b",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∨ □B) ⊃ □(A ∨ B)"
      },
      {
        "id": "2.12.2.c",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ A ≡ ¬◇¬A"
      },
      {
        "id": "2.12.2.d",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ A ≡ ¬□¬A"
      },
      {
        "id": "2.12.2.e",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ∧ B) ⊃ (◇A ∧ ◇B)"
      },
      {
        "id": "2.12.2.f",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ∨ B) ⊃ (◇A ∨ ◇B)"
      },
      {
        "id": "2.12.2.g",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [ "□(A ⊃ B)" ],
        "conclusion": "◇A ⊃ ◇B"
      },
      {
        "id": "2.12.2.h",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [ "□A", "◇B" ],
        "conclusion": "◇(A ∧ B)"
      },
      {
        "id": "2.12.2.i",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□A ≡ □(¬A ⊃ A)"
      },
      {
        "id": "2.12.2.j",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□A ⊃ □(B ⊃ A)"
      },
      {
        "id": "2.12.2.k",
        "logic": "KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬◇B ⊃ □(B ⊃ A)"
      },
      {
        "id": "2.12.2.l",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□(p ∨ q) ⊃ (□p ∨ □q)"
      },
      {
        "id": "2.12.2.m",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [ "□p", "□¬q" ],
        "conclusion": "□(p ⊃ q)"
      },
      {
        "id": "2.12.2.n",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [ "◇p", "◇q" ],
        "conclusion": "◇(p ∧ q)"
      },
      {
        "id": "2.12.2.o",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "2.12.2.p",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ ◇p"
      },
      {
        "id": "2.12.2.q",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [ "p" ],
        "conclusion": "□p"
      },
      {
        "id": "2.12.2.r",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "2.12.2.s",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ ◇◇p"
      },
      {
        "id": "2.12.2.t",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "p ⊃ □◇p"
      },
      {
        "id": "2.12.2.u",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇p ⊃ □◇p"
      },
      {
        "id": "2.12.2.v",
        "logic": "KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇(p ∨ ¬p)"
      }
    ]
  },
  {
    "name": "Normal modal logic",
    "problems": [
      {
        "id": "3.10.3.a",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□(A ⊃ B) ∧ □(B ⊃ C)) ⊃ (A ⊃ C)"
      },
      {
        "id": "3.10.3.b",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□(A ⊃ B) ∧ ◇(A ∧ C)) ⊃ ◇(B ∧ C)"
      },
      {
        "id": "3.10.3.c",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∧ □B) ⊃ (A ≡ B)"
      },
      {
        "id": "3.10.3.d",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ⊃ B) ≡ (□A ⊃ ◇B)"
      },
      {
        "id": "3.10.3.e",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(◇¬A ∨ ◇¬B) ∨ ◇(A ∨ B)"
      },
      {
        "id": "3.10.3.f",
        "logic": "TModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇(A ⊃ (B ∧ C)) ⊃ ((□A ⊃ ◇B) ∧ (□A ⊃ ◇C))"
      },
      {
        "id": "3.10.4.a",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□A ∨ □B) ≡ □(□A ∨ □B)"
      },
      {
        "id": "3.10.4.b",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(□(A ≡ B) ⊃ C) ⊃ (□(A ≡ B) ⊃ □C)"
      },
      {
        "id": "3.10.5.a",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇A ⊃ ◇◇A"
      },
      {
        "id": "3.10.5.b",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇A ⊃ □◇A"
      },
      {
        "id": "3.10.5.c",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(□A ⊃ □B) ∨ □(□B ⊃ □A)"
      },
      {
        "id": "3.10.5.d",
        "logic": "S5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(◇A ⊃ B) ≡ □(A ⊃ □B)"
      },
      {
        "id": "3.10.6.a",
        "logic": "S4ModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇□p ⊃ □◇p"
      },
      {
        "id": "3.10.6.b",
        "logic": "S4ModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□(□p ⊃ q) ∨ □(□q ⊃ p)"
      },
      {
        "id": "3.10.6.c",
        "logic": "S4ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□(p ≡ q) ⊃ □(□p ≡ □q)"
      },
      {
        "id": "3.10.6.d",
        "logic": "S4ModalLogic",
        "expected": "timeout",
        "premises": [],
        "conclusion": "◇□p ≡ □◇p"
      }
    ]
  },
  {
    "name": "First order normal modal logic (constant domain)",
    "problems": [
      {
        "id": "14.10.2.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "∀x □A ≡ □∀x A"
      },
      {
        "id": "14.10.2.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "∃x ◇A ≡ ◇∃x A"
      },
      {
        "id": "14.10.2.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇∀x A ⊃ ∀x ◇A"
      },
      {
        "id": "14.10.2.d",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "∃x □A ≡ □∃x A"
      },
      {
        "id": "14.10.2.e",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "∀x □(A ∧ B) ⊃ □∀x A"
      },
      {
        "id": "14.10.2.f",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ ◇ ∃x A ⊃ □ ∃x ◇(A ∨ B)"
      },
      {
        "id": "14.10.3.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "∀x ◇ P[x] ⊃ ◇ ∀x P[x]"
      },
      {
        "id": "14.10.3.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□ ∃x P[x] ⊃ ∃x □ P[x]"
      },
      {
        "id": "14.10.3.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "∀x □(P[x] ∨ Q[x]) ⊃ □ ∀x P[x]"
      },
      {
        "id": "14.10.3.d",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "∃x □ ◇ P[x] ⊃ ∃x ◇ □ P[x]"
      },
      {
        "id": "16.10.2.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [ "□ P[a]" ],
        "conclusion": "∃x(x = a ∧ P[x])"
      },
      {
        "id": "16.10.2.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [ "◇ ∃x (x = a ∧ P[x])" ],
        "conclusion": "∃x ◇ P[x]"
      },
      {
        "id": "16.10.2.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [ "□ ∃x (x = a)" ],
        "conclusion": "∃x □ (x = a)"
      },
      {
        "id": "16.10.5.a",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [ "a = b", "◇ P[a]" ],
        "conclusion": "◇ P[b]"
      },
      {
        "id": "16.10.5.b",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ P[a] ⊃ ∃x ◇ P[x]"
      },
      {
        "id": "16.10.5.c",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "∀x ◇ P[x] ⊃ ◇ P[a]"
      },
      {
        "id": "16.10.5.d",
        "logic": "FirstOrderLogic+ConstantDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ ∀x P[x] ⊃ □ P[a]"
      }
    ]
  },
  {
    "name": "First order normal modal logic (variable domain)",
    "problems": [
      {
        "id": "16.10.3.a",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [ "□ P[a]" ],
        "conclusion": "∃x(x = a ∧ P[x])"
      },
      {
        "id": "16.10.3.b",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+KModalLogic",
        "expected": "proved",
        "premises": [ "◇ ∃x (x = a ∧ P[x])" ],
        "conclusion": "∃x ◇ P[x]"
      },
      {
        "id": "16.10.3.c",
        "logic": "FirstOrderLogic+VariableDomain+NecessaryIdentity+KModalLogic",
        "expected": "disproved",
        "premises": [ "□ ∃x (x = a)" ],
        "conclusion": "∃x □ (x = a)"
      }
    ]
  },
  {
    "name": "Non-normal modal logic",
    "problems": [
      {
        "id": "4.13.2.a",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ⥽ A"
      },
      {
        "id": "4.13.2.b",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ⥽ B) ∧ (B ⥽ C)) ⥽ (A ⥽ C)"
      },
      {
        "id": "4.13.2.c",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ⥽ B) ⥽ (¬B ⥽ ¬A)"
      },
      {
        "id": "4.13.2.d",
        "logic": "NModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□¬A ⊃ □¬(A ∧ B)"
      },
      {
        "id": "4.13.3.a",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.3.b",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.3.c",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "¬(p ⥽ p) ⥽ q"
      },
      {
        "id": "4.13.3.d",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□(p ⥽ p)"
      },
      {
        "id": "4.13.3.e",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ⥽ q) ⥽ (□p ⥽ □q)"
      },
      {
        "id": "4.13.3.f",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.3.g",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇◇p"
      },
      {
        "id": "4.13.3.h",
        "logic": "NModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□□(p ∨ ¬p)"
      },
      {
        "id": "4.13.4.a",
        "logic": "S2ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.4.b",
        "logic": "S3ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□p ⊃ p"
      },
      {
        "id": "4.13.4.c",
        "logic": "S2ModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.4.d",
        "logic": "S3ModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□p ⊃ □□p"
      },
      {
        "id": "4.13.4.e",
        "logic": "S3ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.4.f",
        "logic": "S3.5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□□p ⥽ (□q ⥽ □□q)"
      },
      {
        "id": "4.13.4.g",
        "logic": "S3.5ModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(p ⥽ q) ⥽ (□p ⥽ □q)"
      }
    ]
  },
  {
    "name": "Temporal modal logic",
    "problems": [
      {
        "id": "3.10.10.a",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᶠ(p ⊃ q) ⊃ (□ᶠp ⊃ □ᶠq)"
      },
      {
        "id": "3.10.10.b",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᶠp ≡ ¬□ᶠ¬p"
      },
      {
        "id": "3.10.10.c",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "p ⊃ □ᶠ◇ᵖp"
      },
      {
        "id": "3.10.10.d",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [ "□ᶠp ⊃ □ᶠ□ᶠp" ],
        "conclusion": "□ᵖp ⊃ □ᵖ□ᵖp"
      },
      {
        "id": "3.10.10.e",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᶠ(p ⊃ q) ⊃ (◇ᶠp ⊃ ◇ᶠq)"
      },
      {
        "id": "3.10.10.f",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [ "◇ᶠ◇ᶠp ⊃ ◇ᶠp" ],
        "conclusion": "◇ᵖ◇ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.10.g",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(□ᵖp ∨ □ᵖq) ⊃ □ᵖ(p ∨ q)"
      },
      {
        "id": "3.10.10.h",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᵖ(p ∧ q) ⊃ (◇ᵖp ∧ ◇ᵖq)"
      },
      {
        "id": "3.10.10.i",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠq) ⊃ ((◇ᶠ(p ∧ ◇ᶠq)) ∨ ◇ᶠ(p ∧ q) ∨ (◇ᶠ(◇ᶠp ∧ q)))"
      },
      {
        "id": "3.10.10.j",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(◇ᵖp ∧ ◇ᵖq) ⊃ ((◇ᵖ(p ∧ ◇ᵖq)) ∨ ◇ᵖ(p ∧ q) ∨ (◇ᵖ(◇ᵖp ∧ q)))"
      },
      {
        "id": "3.10.10.k",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "□ᵖ(p ∧ q) ≡ (□ᵖp ∧ □ᵖq)"
      },
      {
        "id": "3.10.10.l",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.10.m",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ∧ □ᵖp) ⊃ ◇ᶠ□ᵖp"
      },
      {
        "id": "3.10.10.n",
        "logic": "KTemporalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "◇ᵖ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.10.o",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□ᵖ(□ᵖp ⊃ p) ⊃ □ᵖp"
      },
      {
        "id": "3.10.10.p",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇ᵖ□ᵖp ⊃ □ᵖ◇ᵖp"
      },
      {
        "id": "3.10.10.q",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇ᶠ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.10.r",
        "logic": "KTemporalModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠ□ᶠ¬p) ⊃ ◇ᶠ(□ᵖ◇ᶠp ∧ □ᶠ¬p)"
      },
      {
        "id": "3.10.11.d",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [ "□ᶠp ⊃ □ᶠ□ᶠp" ],
        "conclusion": "□ᵖp ⊃ □ᵖ□ᵖp"
      },
      {
        "id": "3.10.11.f",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [ "◇ᶠ◇ᶠp ⊃ ◇ᶠp" ],
        "conclusion": "◇ᵖ◇ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.11.i",
        "logic": "KTemporalExtModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠq) ⊃ ((◇ᶠ(p ∧ ◇ᶠq)) ∨ ◇ᶠ(p ∧ q) ∨ (◇ᶠ(◇ᶠp ∧ q)))"
      },
      {
        "id": "3.10.11.j",
        "logic": "KTemporalExtModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(◇ᵖp ∧ ◇ᵖq) ⊃ ((◇ᵖ(p ∧ ◇ᵖq)) ∨ ◇ᵖ(p ∧ q) ∨ (◇ᵖ(◇ᵖp ∧ q)))"
      },
      {
        "id": "3.10.11.l",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□ᵖp ⊃ ◇ᵖp"
      },
      {
        "id": "3.10.11.m",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ∧ □ᵖp) ⊃ ◇ᶠ□ᵖp"
      },
      {
        "id": "3.10.11.o",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "□ᵖ(□ᵖp ⊃ p) ⊃ □ᵖp"
      },
      {
        "id": "3.10.11.p",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇ᵖ□ᵖp ⊃ □ᵖ◇ᵖp"
      },
      {
        "id": "3.10.11.q",
        "logic": "KTemporalExtModalLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "◇ᶠ□ᶠp ⊃ p"
      },
      {
        "id": "3.10.11.r",
        "logic": "KTemporalExtModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(◇ᶠp ∧ ◇ᶠ□ᶠ¬p) ⊃ ◇ᶠ(□ᵖ◇ᶠp ∧ □ᶠ¬p)"
      }
    ]
  },
  {
    "name": "Conditional modal logic",
    "problems": [
      {
        "id": "5.12.2.a",
        "logic": "ConditionalModalLogic",
        "expected": "proved",
        "premises": [ "□(A ≡ B)" ],
        "conclusion": "(C ᐅ A) ≡ (C ᐅ B)"
      },
      {
        "id": "5.12.2.b",
        "logic": "ConditionalModalLogic",
        "expected": "proved",
        "premises": [ "A ᐅ (B ∧ C)" ],
        "conclusion": "(A ᐅ B) ∧ (A ᐅ C)"
      },
      {
        "id": "5.12.2.c",
        "logic": "ConditionalModalLogic",
        "expected": "proved",
        "premises": [ "(A ᐅ B) ∧ (A ᐅ C)" ],
        "conclusion": "A ᐅ (B ∧ C)"
      },
      {
        "id": "5.12.2.d",
        "logic": "ConditionalModalLogic",
        "expected": "proved",
        "premises": [ "A ᐅ (B ⊃ C)" ],
        "conclusion": "(A ᐅ B) ⊃ (A ᐅ C)"
      },
      {
        "id": "5.12.2.e",
        "logic": "ConditionalModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ᐅ (B ∨ ¬B)"
      },
      {
        "id": "5.12.3.a",
        "logic": "ConditionalExtModalLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "P ᐅ P"
      },
      {
        "id": "5.12.3.b",
        "logic": "ConditionalExtModalLogic",
        "expected": "proved",
        "premises": [ "P", "P ᐅ Q" ],
        "conclusion": "Q"
      },
      {
        "id": "5.12.3.c",
        "logic": "ConditionalExtModalLogic",
        "expected": "proved",
        "premises": [ "□(P ⊃ Q)" ],
        "conclusion": "P ᐅ Q"
      },
      {
        "id": "5.12.3.d",
        "logic": "ConditionalExtModalLogic",
        "expected": "proved",
        "premises": [ "P ∧ ¬Q" ],
        "conclusion": "¬(P ᐅ Q)"
      },
      {
        "id": "5.12.4.a",
        "logic": "ConditionalExtModalLogic",
        "expected": "disproved",
        "premises": [ "P ᐅ Q" ],
        "conclusion": "(P ∧ R) ᐅ Q"
      },
      {
        "id": "5.12.4.b",
        "logic": "ConditionalExtModalLogic",
        "expected": "disproved",
        "premises": [ "P ᐅ Q" ],
        "conclusion": "¬Q ᐅ ¬P"
      },
      {
        "id": "5.12.4.c",
        "logic": "ConditionalExtModalLogic",
        "expected": "disproved",
        "premises": [ "P ᐅ Q", "Q ᐅ R" ],
        "conclusion": "P ᐅ R"
      }
    ]
  },
  {
    "name": "Intuitionistic logic",
    "problems": [
      {
        "id": "6.10.3.a",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "(P ∧ (¬P ∨ Q)) → Q"
      },
      {
        "id": "6.10.3.b",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(P ∧ ¬P)"
      },
      {
        "id": "6.10.3.c",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∨ Q" ],
        "conclusion": "P → Q"
      },
      {
        "id": "6.10.3.d",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬(P ∨ Q)" ],
        "conclusion": "¬P ∧ ¬Q"
      },
      {
        "id": "6.10.3.e",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∧ ¬Q" ],
        "conclusion": "¬(P ∨ Q)"
      },
      {
        "id": "6.10.3.f",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "¬P ∨ ¬Q" ],
        "conclusion": "¬(P ∧ Q)"
      },
      {
        "id": "6.10.3.g",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [ "P → (P → Q)" ],
        "conclusion": "P → Q"
      },
      {
        "id": "6.10.3.h",
        "logic": "IntuitionisticLogic",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬¬(P ∨ ¬P)"
      },
      {
        "id": "6.10.4.a",
        "logic": "IntuitionisticLogic",
        "expected": "disproved",
        "premises": [],
        "conclusion": "P ∨ ¬P"
      },
      {
        "id": "6.10.4.b",
        "logic": "IntuitionisticLogic",
        "expected": "timeout",
        "premises": [ "¬P → P" ],
        "conclusion": "P"
      },
      {
        "id": "6.10.4.c",
        "logic": "IntuitionisticLogic",
        "expected": "disproved",
        "premises": [ "¬(P ∧ Q)" ],
        "conclusion": "¬P ∨ ¬Q"
      },
      {
        "id": "6.10.4.d",
        "logic": "IntuitionisticLogic",
        "expected": "timeout",
        "premises": [ "¬P → ¬Q" ],
        "conclusion": "Q → P"
      },
      {
        "id": "6.10.4.e",
        "logic": "IntuitionisticLogic",
        "expected": "disproved",
        "premises": [ "P → (Q ∨ R)" ],
        "conclusion": "(P → Q) ∨ (Q → R)"
      }
    ]
  },
  {
    "name": "First degree entailment",
    "problems": [
      {
        "id": "8.10.1.a",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P ∧ Q" ],
        "conclusion": "P"
      },
      {
        "id": "8.10.1.b",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P" ],
        "conclusion": "P ∨ Q"
      },
      {
        "id": "8.10.1.c",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P ∧ (Q ∧ R)" ],
        "conclusion": "(P ∧ Q) ∨ (P ∧ R)"
      },
      {
        "id": "8.10.1.d",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P ∧ (Q ∨ R)" ],
        "conclusion": "(P ∨ Q) ∧ (P ∨ R)"
      },
      {
        "id": "8.10.1.e",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P" ],
        "conclusion": "¬¬P"
      },
      {
        "id": "8.10.1.f",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "¬¬P" ],
        "conclusion": "P"
      },
      {
        "id": "8.10.1.g",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "¬(P ∧ Q) ∨ R" ],
        "conclusion": "¬(P ∧ ¬R) ∨ ¬Q"
      },
      {
        "id": "8.10.1.h",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "P ∧ ¬P" ],
        "conclusion": "P ∨ ¬P"
      },
      {
        "id": "8.10.1.i",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "disproved",
        "premises": [ "P ∧ ¬P" ],
        "conclusion": "Q ∨ ¬Q"
      },
      {
        "id": "8.10.1.j",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "disproved",
        "premises": [ "P ∨ Q" ],
        "conclusion": "P ∧ Q"
      },
      {
        "id": "8.10.1.k",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "disproved",
        "premises": [ "P", "¬(P ∧ ¬Q)" ],
        "conclusion": "Q"
      },
      {
        "id": "8.10.1.l",
        "logic": "MinimalFirstDegreeEntailmentLogic",
        "expected": "proved",
        "premises": [ "¬(P ∧ Q) ∨ R" ],
        "conclusion": "¬P ∨ (¬Q ∨ R)"
      },
      {
        "id": "8.10.2.a",
        "logic": "Kleene+KModalLogic",
        "expected": "proved",
        "premises": [ "P ∧ ¬P" ],
        "conclusion": "Q ∨ ¬Q"
      },
      {
        "id": "8.10.2.b",
        "logic": "Kleene+KModalLogic",
        "expected": "disproved",
        "premises": [ "P ∨ Q" ],
        "conclusion": "P ∧ Q"
      },
      {
        "id": "8.10.2.c",
        "logic": "Kleene+KModalLogic",
        "expected": "proved",
        "premises": [ "P", "¬(P ∧ ¬Q)" ],
        "conclusion": "Q"
      },
      {
        "id": "8.10.2.d",
        "logic": "LP+KModalLogic",
        "expected": "proved",
        "premises": [ "P ∧ ¬P" ],
        "conclusion": "Q ∨ ¬Q"
      },
      {
        "id": "8.10.2.e",
        "logic": "LP+KModalLogic",
        "expected": "disproved",
        "premises": [ "P ∨ Q" ],
        "conclusion": "P ∧ Q"
      },
      {
        "id": "8.10.2.f",
        "logic": "LP+KModalLogic",
        "expected": "disproved",
        "premises": [ "P", "¬(P ∧ ¬Q)" ],
        "conclusion": "Q"
      },
      {
        "id": "8.10.2.g",
        "logic": "Lukasiewicz+KModalLogic",
        "expected": "disproved",
        "premises": [ "(P ∧ Q) ⊃ R" ],
        "conclusion": "(P ∧ ¬R) ⊃ ¬Q"
      },
      {
        "id": "8.10.2.h",
        "logic": "Lukasiewicz+KModalLogic",
        "expected": "disproved",
        "premises": [ "(P ∧ Q) ⊃ R" ],
        "conclusion": "P ⊃ (¬Q ∨ R)"
      },
      {
        "id": "8.10.2.i",
        "logic": "RMingle3+KModalLogic",
        "expected": "disproved",
        "premises": [ "(P ∧ Q) ⊃ R" ],
        "conclusion": "(P ∧ ¬R) ⊃ ¬Q"
      },
      {
        "id": "8.10.2.j",
        "logic": "RMingle3+KModalLogic",
        "expected": "disproved",
        "premises": [ "(P ∧ Q) ⊃ R" ],
        "conclusion": "P ⊃ (¬Q ∨ R)"
      }
    ]
  },
  {
    "name": "Logic with gaps, gluts and worlds (normal)",
    "problems": [
      {
        "id": "9.11.2.a",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ᐅ A"
      },
      {
        "id": "9.11.2.b",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ᐅ ¬¬A) ∧ (¬¬A ᐅ A)"
      },
      {
        "id": "9.11.2.c",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ∧ B) ᐅ A"
      },
      {
        "id": "9.11.2.d",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ᐅ (A ∨ B)"
      },
      {
        "id": "9.11.2.e",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ∧ (B ∨ C)) ᐅ ((A ∧ B) ∨ (A ∧ C))) ∧ (((A ∧ B) ∨ (A ∧ C)) ᐅ (A ∧ (B ∨ C)))"
      },
      {
        "id": "9.11.2.f",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B", "A ᐅ C" ],
        "conclusion": "A ᐅ (B ∧ C)"
      },
      {
        "id": "9.11.2.g",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ C", "B ᐅ C" ],
        "conclusion": "(A ∨ B) ᐅ C"
      },
      {
        "id": "9.11.2.h",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ C" ],
        "conclusion": "(A ∧ B) ᐅ C"
      },
      {
        "id": "9.11.2.i",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ᐅ B) ∧ (A ᐅ C)) ᐅ (A ᐅ (B ∧ C))"
      },
      {
        "id": "9.11.2.j",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ᐅ C) ∧ (B ᐅ C)) ᐅ ((A ∨ B) ᐅ C)"
      },
      {
        "id": "9.11.2.k",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B" ],
        "conclusion": "(B ᐅ C) ᐅ (A ᐅ C)"
      },
      {
        "id": "9.11.2.l",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B" ],
        "conclusion": "(C ᐅ A) ᐅ (C ᐅ B)"
      },
      {
        "id": "9.11.2.m",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B", "B ᐅ C" ],
        "conclusion": "A ᐅ C"
      }
    ]
  },
  {
    "name": "Logic with gaps, gluts and worlds (non-normal)",
    "problems": [
      {
        "id": "9.11.3.a",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ∧ (¬p ∨ q)) ᐅ q"
      },
      {
        "id": "9.11.3.b",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [ "(p ∧ q) ᐅ r" ],
        "conclusion": "p ᐅ (¬q ∨ r)"
      },
      {
        "id": "9.11.3.c",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "p ᐅ (q ∨ ¬q)"
      },
      {
        "id": "9.11.3.d",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ∧ ¬p) ᐅ q"
      },
      {
        "id": "9.11.3.e",
        "logic": "K4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ᐅ q) ᐅ (¬q ᐅ ¬p)"
      },
      {
        "id": "9.11.3.a",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ᐅ A"
      },
      {
        "id": "9.11.3.b",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ᐅ ¬¬A) ∧ (¬¬A ᐅ A)"
      },
      {
        "id": "9.11.3.c",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "(A ∧ B) ᐅ A"
      },
      {
        "id": "9.11.3.d",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "A ᐅ (A ∨ B)"
      },
      {
        "id": "9.11.3.e",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [],
        "conclusion": "((A ∧ (B ∨ C)) ᐅ ((A ∧ B) ∨ (A ∧ C))) ∧ (((A ∧ B) ∨ (A ∧ C)) ᐅ (A ∧ (B ∨ C)))"
      },
      {
        "id": "9.11.3.f",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B", "A ᐅ C" ],
        "conclusion": "A ᐅ (B ∧ C)"
      },
      {
        "id": "9.11.3.g",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ C", "B ᐅ C" ],
        "conclusion": "(A ∨ B) ᐅ C"
      },
      {
        "id": "9.11.3.h",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ C" ],
        "conclusion": "(A ∧ B) ᐅ C"
      },
      {
        "id": "9.11.3.i",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "((A ᐅ B) ∧ (A ᐅ C)) ᐅ (A ᐅ (B ∧ C))"
      },
      {
        "id": "9.11.3.j",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [],
        "conclusion": "((A ᐅ C) ∧ (B ᐅ C)) ᐅ ((A ∨ B) ᐅ C)"
      },
      {
        "id": "9.11.3.k",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [ "A ᐅ B" ],
        "conclusion": "(B ᐅ C) ᐅ (A ᐅ C)"
      },
      {
        "id": "9.11.3.l",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "disproved",
        "premises": [ "A ᐅ B" ],
        "conclusion": "(C ᐅ A) ᐅ (C ᐅ B)"
      },
      {
        "id": "9.11.3.m",
        "logic": "N4ModalLogicWithGapsAndGluts",
        "expected": "proved",
        "premises": [ "A ᐅ B", "B ᐅ C" ],
        "conclusion": "A ᐅ C"
      }
    ]
  },
  {
    "name": "Logic of constructible negation",
    "problems": [
      {
        "id": "9.11.10.a",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(p ∧ q) ⊃ (¬p ∨ ¬q)"
      },
      {
        "id": "9.11.10.b",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(p ∨ q) ⊃ (¬p ∧ ¬q)"
      },
      {
        "id": "9.11.10.c",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ⊃ q) ⊃ (¬q ⊃ ¬p)"
      },
      {
        "id": "9.11.10.c'",
        "logic": "I3LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ⊃ q) ⊃ (¬q ⊃ ¬p)"
      },
      {
        "id": "9.11.10.d",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "p ∨ ¬p"
      },
      {
        "id": "9.11.10.e",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(¬p ⊃ p) ⊃ p"
      },
      {
        "id": "9.11.10.f",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(p ⊃ q) ⊃ (p ⊃ ¬q)"
      },
      {
        "id": "9.11.10.f'",
        "logic": "WLogicOfConstructibleNegation",
        "expected": "proved",
        "premises": [],
        "conclusion": "¬(p ⊃ q) ⊃ (p ⊃ ¬q)"
      },
      {
        "id": "9.11.10.g",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "(p ⊃ q) ∨ (p ⊃ ¬q)"
      },
      {
        "id": "9.11.10.h",
        "logic": "I4LogicOfConstructibleNegation",
        "expected": "disproved",
        "premises": [],
        "conclusion": "¬((p ∧ ¬p) ⊃ (p ∨ ¬p))"
      },
      {
        "id": "9.11.10.h'",
        "logic": "WLogicOfConstructibleNegation",
        "expected": " proved",
        "premises": [],
        "conclusion": "¬((p ∧ ¬p) ⊃ (p ∨ ¬p))"
      },
      {
        "id": "9.11.11.Aristotle",
        "logic": "WLogicOfConstructibleNegation",
        "expected": " proved",
        "premises": [],
        "conclusion": "¬(A ⊃ ¬A)"
      },
      {
        "id": "9.11.11.Boethius",
        "logic": "WLogicOfConstructibleNegation",
        "expected": " proved",
        "premises": [],
        "conclusion": "(A ⊃ B) ⊃ ¬(A ⊃ ¬B)"
      }
    ]
  }
]